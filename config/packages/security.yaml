security:
    # https://symfony.com/doc/current/security/experimental_authenticators.html
    enable_authenticator_manager: true
    encoders:
        App\Entity\User: auto

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern: ^/api
            stateless: true
            jwt: ~

        main:
            lazy: true
            #anonymous: true
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\AppAuthenticator
            #custom_authenticator: App\Security\AppAuthenticator
            logout:
                path: app_logout
                csrf_parameter: csrf_token
                csrf_token_id: signout
                csrf_token_generator: Symfony\Component\Security\Csrf\CsrfTokenManagerInterface
                # where to redirect after logout
                target: app_home
            remember_me:
                secret: "%kernel.secret%"
                lifetime: 604800 # 1 week in seconds
                path: /

            #custom_authenticator: App\Security\AppAuthenticator

            #anonymous: ~
            oauth:
                resource_owners:
                    facebook: "/login/check-facebook"
                    google: "/login/check-google"
                    github: "/login/check-github"
                login_path: /login
                use_forward: false
                failure_path: /login

                oauth_user_provider:
                    service: oauth_aware_user_provider

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/account, roles: ROLE_USER }
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }
when@test:
    security:
        password_hashers:
        # By default, password hashers are resource intensive and take time. This is
        # important to generate secure password hashes. In tests however, secure hashes
        # are not important, waste resources and increase test times. The following
        # reduces the work factor to the lowest possible values.
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
            algorithm: auto
            cost: 4 # Lowest possible value for bcrypt
            time_cost: 3 # Lowest possible value for argon
            memory_cost: 10 # Lowest possible value for argon
